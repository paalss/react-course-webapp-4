[{"C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-4\\src\\index.js":"1","C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-4\\src\\App.js":"2","C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-4\\src\\components\\Home\\Home.js":"3","C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-4\\src\\components\\Login\\Login.js":"4","C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-4\\src\\components\\MainHeader\\MainHeader.js":"5","C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-4\\src\\components\\MainHeader\\Navigation.js":"6","C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-4\\src\\components\\UI\\Button\\Button.js":"7","C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-4\\src\\components\\UI\\Card\\Card.js":"8"},{"size":169,"mtime":1619000322110,"results":"9","hashOfConfig":"10"},{"size":1117,"mtime":1619004407618,"results":"11","hashOfConfig":"10"},{"size":250,"mtime":1619000322276,"results":"12","hashOfConfig":"10"},{"size":2408,"mtime":1619018236523,"results":"13","hashOfConfig":"10"},{"size":368,"mtime":1619000322315,"results":"14","hashOfConfig":"10"},{"size":571,"mtime":1619000322360,"results":"15","hashOfConfig":"10"},{"size":353,"mtime":1619000322252,"results":"16","hashOfConfig":"10"},{"size":218,"mtime":1619000322204,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"65c11d",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-4\\src\\index.js",[],["36","37"],"C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-4\\src\\App.js",["38"],"import React, { useState, useEffect } from \"react\";\n\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\n\nfunction App() {\n  const storedUserLoggedInInfo = localStorage.getItem(\"isLoggedIn\");\n\n  useEffect(() => {\n    // side effect. avoid infinite loop.\n    if (storedUserLoggedInInfo === \"1\") {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem(\"isLoggedIn\", \"1\");\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn')\n    setIsLoggedIn(false);\n  };\n\n  return (\n    <React.Fragment>\n      <MainHeader isAuthenticated={isLoggedIn} onLogout={logoutHandler} />\n      <main>\n        {!isLoggedIn && <Login onLogin={loginHandler} />}\n        {isLoggedIn && <Home onLogout={logoutHandler} />}\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-4\\src\\components\\Home\\Home.js",[],"C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-4\\src\\components\\Login\\Login.js",[],"C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-4\\src\\components\\MainHeader\\MainHeader.js",[],"C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-4\\src\\components\\MainHeader\\Navigation.js",[],"C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-4\\src\\components\\UI\\Button\\Button.js",[],"C:\\xampp\\htdocs\\sider\\learning-moment\\react-udemy-course\\react-course-webapp-4\\src\\components\\UI\\Card\\Card.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":15,"column":6,"nodeType":"45","endLine":15,"endColumn":8,"suggestions":"46"},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'storedUserLoggedInInfo'. Either include it or remove the dependency array.","ArrayExpression",["49"],"no-global-assign","no-unsafe-negation",{"desc":"50","fix":"51"},"Update the dependencies array to be: [storedUserLoggedInInfo]",{"range":"52","text":"53"},[432,434],"[storedUserLoggedInInfo]"]